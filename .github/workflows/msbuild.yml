name: MSBuild WDK Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  SOLUTION_FILE_PATH: "EzAntiAntiCheat.sln"
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1. Checkout repository
      - uses: actions/checkout@v4

      # 2. Setup MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      # 3. Detect latest WDK installation dynamically
      - name: Detect latest WDK
        shell: powershell
        run: |
          $ErrorActionPreference = "Stop"
          # Use vswhere from default VS installer location
          $vsWherePath = "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe"
          if (-not (Test-Path $vsWherePath)) { throw "vswhere.exe not found" }

          # Find latest VS with WDK
          $vsPath = & $vsWherePath -products * -requires Microsoft.Component.WindowsDriverKit -property installationPath -latest
          if (-not $vsPath) { throw "WDK not found" }
          Write-Host "Visual Studio WDK path: $vsPath"

          # Detect latest WDK Include folder
          $wdkIncludeRoot = Join-Path $vsPath "WDK\10.0\Include"
          if (-not (Test-Path $wdkIncludeRoot)) { throw "WDK include folder not found" }
          Write-Host "WDK include folder: $wdkIncludeRoot"

          # Export for MSBuild
          echo "WDK_INCLUDE=$wdkIncludeRoot" >> $env:GITHUB_ENV
          echo "WDKContentRoot=$vsPath\WDK\10.0" >> $env:GITHUB_ENV

      # 4. Restore NuGet packages
      - name: Restore NuGet packages
        working-directory: ${{ github.workspace }}
        run: nuget restore ${{ env.SOLUTION_FILE_PATH }}

      # 5. Build solution with MSBuild
      - name: Build with MSBuild
        working-directory: ${{ github.workspace }}
        shell: pwsh
        run: |
          msbuild ${{ env.SOLUTION_FILE_PATH }} `
            /m `
            /p:Configuration=${{ env.BUILD_CONFIGURATION }} `
            /p:Platform=${{ env.BUILD_PLATFORM }} `
            /p:PreferredToolArchitecture=x64 `
            /p:WDKContentRoot=$env:WDKContentRoot `
            /p:AdditionalIncludeDirectories="$env:WDK_INCLUDE\km;$env:WDK_INCLUDE\shared" `
            /verbosity:minimal

      # 6. Upload built artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: EzAntiAntiCheat-Build
          path: |
            ${{ github.workspace }}/${{ env.BUILD_PLATFORM }}/${{ env.BUILD_CONFIGURATION }}/*.sys
            ${{ github.workspace }}/${{ env.BUILD_PLATFORM }}/${{ env.BUILD_CONFIGURATION }}/*.exe
